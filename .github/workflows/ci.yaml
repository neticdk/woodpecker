name: Continuous Integration Tests

on:
  push:
    branches: ["main", "feature/rewrite-bitbucket-support"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      GO111MODULE: on
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up Go 1.x
        uses: actions/setup-go@v3
        with:
          go-version: 1.20.3
          cache: true

      - name: Vendor modules
        run: go mod vendor

      - name: Build web
        run: |
          corepack enable
          cd web
          pnpm install --frozen-lockfile
          pnpm build

      - name: Build server
        run: make release-server

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for server
        id: server-meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-server

      - name: Build and push server image
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64
          file: docker/Dockerfile.server.multiarch
          push: true
          tags: ${{ steps.server-meta.outputs.tags }}
          labels: ${{ steps.server-meta.outputs.labels }}

      - name: Build server
        run: make release-agent

      - name: Extract metadata (tags, labels) for agent
        id: agent-meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-agent

      - name: Build and push agent image
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64
          file: docker/Dockerfile.agent.multiarch
          push: true
          tags: ${{ steps.agent-meta.outputs.tags }}
          labels: ${{ steps.agent-meta.outputs.labels }}
